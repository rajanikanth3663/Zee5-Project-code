#!/bin/bash
FILE_SYSTEM=${file_system}
DISK_PARTITION=${disk_partition}
MOUNT_POINT_NAME=${mount_point_name}
DISK_PARTITION2=sdd
MOUNT_POINT_NAME2=mnt2
DISK_PARTITION3=sde
MOUNT_POINT_NAME3=mnt3
DISK_PARTITION4=sdf
MOUNT_POINT_NAME4=mnt4

echo " "
echo "...........###########################################.........."
echo ".........................MOUNT DISKS......................"
echo "...........###########################################.........."
echo " "
echo "###- Partition and Format the disk1 -###"
sudo parted /dev/$DISK_PARTITION --script mklabel gpt mkpart "$FILE_SYSTEM"part $FILE_SYSTEM 0% 100%
sudo mkfs.$FILE_SYSTEM /dev/"$DISK_PARTITION"1
sudo partprobe /dev/"$DISK_PARTITION"1
echo " "
echo "###- Mount disk#1 -###"
sudo mkdir /$MOUNT_POINT_NAME
sudo mount /dev/"$DISK_PARTITION"1 /$MOUNT_POINT_NAME
echo " "
echo "###- Extract UUID and save it in variable -###"
uuid1=$(sudo blkid | grep -i ""$DISK_PARTITION"1" | awk '{print $2}' | tr -d '"' | awk '{print $1"   /'$MOUNT_POINT_NAME'   '$FILE_SYSTEM'   defaults,nofail   1   2"}')
echo " "
echo "###- Partition and Format the disk2 -###"
sudo parted /dev/$DISK_PARTITION2 --script mklabel gpt mkpart "$FILE_SYSTEM"part $FILE_SYSTEM 0% 100%
sudo mkfs.$FILE_SYSTEM /dev/"$DISK_PARTITION2"1
sudo partprobe /dev/"$DISK_PARTITION2"1
echo " "
echo "###- Mount the disk -###"
sudo mkdir /$MOUNT_POINT_NAME2
sudo mount /dev/"$DISK_PARTITION2"1 /$MOUNT_POINT_NAME2
echo " "
echo "###- Extract UUID and save it in variable -###"
uuid2=$(sudo blkid | grep -i ""$DISK_PARTITION2"1" | awk '{print $2}' | tr -d '"' | awk '{print $1"   /'$MOUNT_POINT_NAME2'   '$FILE_SYSTEM'   defaults,nofail   1   2"}')
echo " "
echo "###- Partition and Format the disk3 -###"
sudo parted /dev/$DISK_PARTITION3 --script mklabel gpt mkpart "$FILE_SYSTEM"part $FILE_SYSTEM 0% 100%
sudo mkfs.$FILE_SYSTEM /dev/"$DISK_PARTITION3"1
sudo partprobe /dev/"$DISK_PARTITION3"1
echo " "
echo "###- Mount the disk -###"
sudo mkdir /$MOUNT_POINT_NAME3
sudo mount /dev/"$DISK_PARTITION3"1 /$MOUNT_POINT_NAME3
echo " "
echo "###- Extract UUID and save it in variable -###"
uuid3=$(sudo blkid | grep -i ""$DISK_PARTITION3"1" | awk '{print $2}' | tr -d '"' | awk '{print $1"   /'$MOUNT_POINT_NAME3'   '$FILE_SYSTEM'   defaults,nofail   1   2"}')
echo " "
echo "###- Partition and Format the disk2 -###"
sudo parted /dev/$DISK_PARTITION4 --script mklabel gpt mkpart "$FILE_SYSTEM"part $FILE_SYSTEM 0% 100%
sudo mkfs.$FILE_SYSTEM /dev/"$DISK_PARTITION4"1
sudo partprobe /dev/"$DISK_PARTITION4"1
echo " "
echo "###- Mount the disk -###"
sudo mkdir /$MOUNT_POINT_NAME4
sudo mount /dev/"$DISK_PARTITION4"1 /$MOUNT_POINT_NAME4
echo " "
echo "###- Extract UUID and save it in variable -###"
uuid4=$(sudo blkid | grep -i ""$DISK_PARTITION4"1" | awk '{print $2}' | tr -d '"' | awk '{print $1"   /'$MOUNT_POINT_NAME4'   '$FILE_SYSTEM'   defaults,nofail   1   2"}')
echo " "
echo "###- Backup of org fstab file -###"
sudo cp /etc/fstab /etc/fstab_backup
echo " "
echo "###- Append UUIDs to fstab -###"
echo $uuid1 | sudo tee -a /etc/fstab
echo $uuid2 | sudo tee -a /etc/fstab
echo $uuid3 | sudo tee -a /etc/fstab
echo $uuid4 | sudo tee -a /etc/fstab
echo " "
echo "###- Verify partition -###"
lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"

echo " "
echo "...........###########################################.........."
echo ".....................CONFIGURE ETL-RCB SERVER..................."
echo "...........###########################################.........."
echo " "
sudo su
if [ -f "/etc/needrestart/needrestart.conf" ];
then
	sed -i "/#\$nrconf{restart} = 'i';/s/.*/\$nrconf{restart} = 'a';/" /etc/needrestart/needrestart.conf
	sed -i "s/#\$nrconf{kernelhints} = -1;/\$nrconf{kernelhints} = -1;/g" /etc/needrestart/needrestart.conf
fi

echo -ne '\n' | apt update && apt upgrade -y
apt install software-properties-common ca-certificates lsb-release apt-transport-https -y -y

apt update
apt-get install apache2 -y
systemctl start apache2

add-apt-repository ppa:ondrej/php -y
apt install php7.2 -y
apt install php7.2-mysql -y
apt install php7.2-curl -y
apt install php7.2-redis -y

apt install openjdk-8-jre-headless -y

#apt-get clean
#apt-get autoremove --purge
#apt-get remove python3.10 -y
#apt-get autoremove -y

apt install build-essential checkinstall -y
apt install libreadline-gplv2-dev libncursesw5-dev libssl-dev libsqlite3-dev tk-dev libgdbm-dev libc6-dev libbz2-dev
cd /var/lib/waagent/custom-script/download/0/
#wget https://www.python.org/ftp/python/3.6.0/Python-3.6.0.tar.xz
tar xvf Python-3.6.0.tar.xz
cd Python-3.6.0/
./configure
make altinstall

#PySpark
apt-get install python3-pip -y
pip3 install pyspark
pip3 install tendo
pip3 install mysql-connector
pip3 install redis
pip3 install urllib3

#Hadoop
cd /var/lib/waagent/custom-script/download/0/
#wget https://downloads.apache.org/spark/spark-3.4.1/spark-3.4.1-bin-hadoop3.tgz
tar -xvf spark-3.4.1-bin-hadoop3.tgz
mv spark-3.4.1-bin-hadoop3 /opt/spark
echo "export PATH=$PATH:/opt/spark/spark-3.4.1-bin-hadoop3/bin" >> ~/.bashrc
echo "export SPARK_HOME=/opt/spark/spark-3.4.1-bin-hadoop3" >> ~/.bashrc
source ~/.bashrc
cp /opt/spark/spark-3.4.1-bin-hadoop3/conf/spark-env.sh.template /opt/spark/spark-3.4.1-bin-hadoop3/conf/spark-env.sh

apt update
apt install redis-server -y

echo " "
echo "...........###########################################.........."
echo "...........................INSTALL AZ CLI........................"
echo "...........###########################################.........."
echo " "
sudo apt-get update
sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg

sudo mkdir -p /etc/apt/keyrings
curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
sudo chmod go+r /etc/apt/keyrings/microsoft.gpg

AZ_DIST=$(lsb_release -cs)
echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_DIST main" | sudo tee /etc/apt/sources.list.d/azure-cli.list

sudo apt-get update
sudo apt-get install azure-cli